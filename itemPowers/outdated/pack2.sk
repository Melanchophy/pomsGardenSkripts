on right click:
    if custom model data of player's tool is 12:   
        if cooldown(player, "blast pickaxe", 1 seconds) is true:
            if player's world is not "spawn":
                if distance between player's head and player's target block is less than 10:
                    if manaConsume(player, 8) is true:
                        set {_tb} to player's target block
                        particleLine(location 1.1 blocks above player, {_tb}, smoke, 3)
                        damageTool(player, 5)
                        loop blocks in radius 5.5 of {_tb}:
                            if hardness of loop-block >= 0:
                                if hardness of loop-block < 10:
                                    if inventory of loop-block is not set:
                                        if uncolored line 1 of loop-block is not "[Private]":
                                            chance of 5.3 - distance between {_tb} and loop-block:
                                                break loop-block naturally using player's tool
                        make explosion with force 2 at {_tb}

    else if custom model data of player's tool is 14:
        if cooldown(player, "magicalBalls", 1.4 second) is true:
            if {tr::player::%player's uuid%::magicBalls} is not greater than 4:
                remove 1 from item amount of player's tool
                add 1 to {tr::player::%player's uuid%::magicballs}
                add 1 to {tr::player::%player's uuid%::maxMana}
                play sound "entity.experience_orb.pickup" with pitch 1.4 at player
                particleArc(location 0.35 blocks below player's head, 0, 1, 15, 1 tick, 24, 1, wax off, 0)
                particleArc(location 0.35 blocks below player's head, 0, 1, 15, 1 tick, 24, 1, wax off, 40)
                particleArc(location 0.35 blocks below player's head, 0, 1, 15, 1 tick, 24, 1, wax off, -40)
                show flash at player
                particleArc(location 0.35 blocks below player's head, 0, 1, 15, 1 tick, 24, 1.5, soul, 0)
                loop 25 times:
                    set {_l} to location 0.25*loop-value blocks above player's head
                    play wax off at {_l}
                manaChange(player, 0)

    else if custom model data of player's tool is 15:
        if cooldown(player, "Proc", 0.2 seconds) is true:
            if manaConsume(player, 1) is true:
                play sound "ui.stonecutter.select_recipe" at player
                play sound "ui.stonecutter.take_result" with pitch 2 at player
                set {_l} to raycastFromPlayer(player, 6.5)
                if {_l} is not set:
                    set {_l} to location 6.5 blocks in front of player
                
                particleLine(location 1.1 blocks above player, location 1 block above {_l}, wax_off, 3)
                if {_l} is alive:
                    if damageCheck(player, {_l}) is true:
                        make player damage {_l} by 4
                        set {_near} to nearest {_l} in radius 3 around {_l}
                        if damageCheck(player, {_near}) is true:
                            particleLine(location 1 blocks above player's target entity, location 1.1 blocks above {_near}, wax_off, 3)
                            make player damage {_near} by abilityDamage(player, 3)


    else if custom model data of player's tool is 16:
        if cooldown(player, "Flame", 0.1 seconds) is true:
            if player is not sneaking:
                if manaConsume(player, 1) is true:
                    play sound "entity.generic.extinguish_fire" with volume 0.5 with pitch 0.9 at player
                    play sound "item.armor.equip_netherite" with volume 1.2 with pitch 1.4 at player
                    set {_l} to raycastFromPlayer(player, 5)
                    if {_l} is not set:
                        set {_l} to location 6.5 blocks in front of player
                    
                    particleLine(location 1.1 blocks above player, location 1 block above {_l}, flame, 1)
                    if {_l} is alive:
                        if damageCheck(player, {_l}) is true:
                            make player damage {_l} by abilityDamage(player, 2)
                            ignite {_l} for 80 ticks
            else:
                if cooldown(player, "Flame2", 3 seconds) is true:
                    if manaConsume(player, 5) is true:
                        play sound "entity.blaze.shoot" with volume 1.2 with pitch 0.6 at player
                        loop entities in radius 5 of player:
                            if loop-entity is not player:
                                ignite loop-entity for 160 ticks
                                make player damage loop-entity by abilityDamage(player, 6)
                        loop 3 times:
                            loop 3 times:
                                particleArc(location 0.35 blocks above player, 0, 2, 15, 1 tick, 12, (1.5 * loop-value-1) + 0.5, flame, (loop-value-2 * -20) + 30)
                            wait 2 ticks

    else if custom model data of player's tool is 17:
        if cooldown(player, "Skull", 0.4 seconds) is true:
            if manaConsume(player, 4) is true:
                play sound "entity.wither_skeleton.hurt" at player
                play sound "entity.wither.hurt" with volume 0.5 at player
                make player shoot wither skull at speed 0.1
                set {te::entity::%last shot projectile's uuid%::state} to "Skull"

    else if custom model data of player's tool is 18:
        if cooldown(player, "HypoxicMiningBuff", 10 seconds) is true:
            if manaConsume(player, 10) is true:
                loop players in radius 3 of player:
                    apply haste 5 to loop-player for 7 seconds
                    play sound "entity.wolf.growl" at player

on projectile hit:
    if {te::entity::%projectile's uuid%::state} is "skull":
        set {te::boom} to false
        delete projectile
        cancel event
        loop entities in radius 3 of event-projectile:
            if damageCheck(shooter, loop-entity) is true:
                make shooter damage loop-entity by abilityDamage(shooter, 7.5)
    clear {te::entity::%projectile's uuid%::*}

on projectile collide:
    if {te::entity::%projectile's uuid%::state} is "skull":
        set {te::boom} to false
        delete projectile
        cancel event
        show large explosion at location
        play sound "entity.hoglin.attack" with volume 2 with pitch 0.5 at location
        make shooter damage event-entity by abilityDamage(shooter, 10.5)
        loop entities in radius 3 of event-projectile:
            if damageCheck(shooter, loop-entity) is true:
                make shooter damage loop-entity by abilityDamage(shooter, 7.5)
    clear {te::entity::%projectile's uuid%::*}

on explosion:
    if {te::boom} is set:
        show large explosion at location
        play sound "entity.hoglin.attack" with volume 2 with pitch 0.5 at location
        clear {te::boom}
        cancel event